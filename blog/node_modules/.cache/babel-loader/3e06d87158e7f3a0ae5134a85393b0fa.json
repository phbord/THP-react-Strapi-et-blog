{"ast":null,"code":"var _jsxFileName = \"/Users/pierre-henribord/Sites/THP/THP-react-Strapi-et-blog/blog/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport List from 'components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const URL = 'http://localhost:1337/articles';\n  const options = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const [listArticles, setListArticles] = React.useState([]);\n\n  const dataArticles = async () => {\n    let mounted = true;\n    fetch(URL, options).then(res => res.json()).then(res => {\n      setListArticles(res);\n    }); //.then(data => console.log('data => ', data))\n    //.then(data => setListArticles(data))\n    //.then(data => console.log('listArticles => ', listArticles))\n\n    return () => mounted = false;\n  };\n\n  const allArticles = () => {\n    listArticles.map(item => {\n      /*#__PURE__*/\n      _jsxDEV(List, {\n        itemArticle: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    dataArticles();\n    console.log('listArticles => ', listArticles);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"w8Q2+E72wQ8P/uzBuFfChMcq58g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pierre-henribord/Sites/THP/THP-react-Strapi-et-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","List","App","URL","options","method","headers","listArticles","setListArticles","dataArticles","mounted","fetch","then","res","json","allArticles","map","item","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,GAAG,GAAG,gCAAZ;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFK,GAAhB;AAIA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC/B,QAAIC,OAAO,GAAG,IAAd;AACAC,IAAAA,KAAK,CAACR,GAAD,EAAMC,OAAN,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXL,MAAAA,eAAe,CAACK,GAAD,CAAf;AACD,KAJH,EAF+B,CAO7B;AACA;AACA;;AACA,WAAO,MAAMH,OAAO,GAAG,KAAvB;AACH,GAXD;;AAaA,QAAMK,WAAW,GAAG,MAAM;AACxBR,IAAAA,YAAY,CAACS,GAAb,CAAiBC,IAAI,IAAI;AACvB;AAAA,cAAC,IAAD;AAAoB,QAAA,WAAW,EAAEA;AAAjC,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AACD,KAFD;AAGD,GAJD;;AAMAlB,EAAAA,SAAS,CACP,MAAM;AACJS,IAAAA,YAAY;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCb,YAAhC;AACD,GAJM,EAIJ,EAJI,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3CQL,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap';\n\nimport List from 'components/List';\n\nfunction App() {\n  const URL = 'http://localhost:1337/articles'\n  const options = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' }\n  }\n  const [listArticles, setListArticles] = React.useState([])\n\n  const dataArticles = async () => {\n    let mounted = true;\n    fetch(URL, options)\n      .then(res => res.json())\n      .then(res => {\n        setListArticles(res)\n      })\n      //.then(data => console.log('data => ', data))\n      //.then(data => setListArticles(data))\n      //.then(data => console.log('listArticles => ', listArticles))\n      return () => mounted = false\n  }\n\n  const allArticles = () => {\n    listArticles.map(item => {\n      <List key={item.id} itemArticle={item} />\n    })\n  }\n\n  useEffect(\n    () => {\n      dataArticles();\n      console.log('listArticles => ', listArticles);\n    }, []\n  )\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <article>\n          {/* <ul>{allArticles()}</ul> */}\n        </article>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}